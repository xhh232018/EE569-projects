1.Author Information:    Name: Hanhua Xiao	   ID: 2209-2389-76   Email: hanhuaxi@usc.edu2.Compiler and platform:   use c++ to implement the algorithms and g++ complier   AppCode on Linux Ubuntu 16.043.How to compile?   Compile: Access to the folder of the code and open in terminal, type g++ -o program_name.out xxx.cpp in command line   Example: g++ -o hw1.1.out hw1.1.cpp  4.Instructions:  P1.1:(square to disk-shape)    ex:./warpping.out ..(the directory of the image)/panda.raw(input image name)  3(number of channels) 512 512(size according to the homework) ..(the directory of the image)/panda_circle.raw(output image name)recover:ex:./recover.out ..(the directory of the image)/panda_circle.raw(input disk-shaped image name)  3(number of channels) 512 512(size according to the homework) ..(the directory of the image)/panda_rcv.raw(output image name)P1.2 Homography:(it has 3 input images)    ex:./para.out ..(the directory of the image)/middle.raw(input middle image name)  ..(the directory of the image)right.raw(input right image name1) ..(the directory of the image)left.raw(input left image name1) 3(number of channels) 480 640(size according to the homework) ..(the directory of the image)/para.raw(output image name)     Compare 4 control points with 8 points:(para4.cpp & paranoma.cpp)    ex:./para4.out ..(the directory of the image)/middle.raw(input middle image name)  ..(the directory of the image)right.raw(input right image name1)  3(number of channels) 480 640(size according to the homework) ..(the directory of the image)/para4.raw(output image name)     ex:./paranoma.out ..(the directory of the image)/middle.raw(input middle image name)  ..(the directory of the image)right.raw(input right image name1)  3(number of channels) 480 640(size according to the homework) ..(the directory of the image)/para8.raw(output image name)P2.1 Halftoning(fixed & random threshold)   ex:./hft.out ..(the directory of the image)/colorchecker.raw(input image name)  ..(the directory of the image)/colorchecker_fth.raw(name of output fixed-thresholding image) 1(number of channels) 512 512(size according to the homework)  ..(the directory of the image)/rand.raw(output random thresholding image name)P2.2 Error Diffusion  ex:./errordif.out ..(the directory of the image)/colorchecker.raw(input image name)  ..(the directory of the image)/fs.raw(output fs kernel image name) 1(number of channels) 512 512(size of input image according to the homework) ..(the directory of the image)/jjn.raw(output jjn kernel image name) ..(the directory of the image)/sk.raw(output sk kernel image name) ..(the directory of the image)/bk.raw(output Burke's kernel image name) P2.2 Dithering  ex:./dithering.out ..(the directory of the image)/colorchecker.raw(input image name)  ..(the directory of the image)/I2.raw(output dithering by I2 kernel image name) 1(number of channels) 512 512(size of input image according to the homework) ..(the directory of the image)/I4.raw(output I4 kernel image name) ..(the directory of the image)/I8.raw(output I8 kernel image name) ..(the directory of the image)/I42.raw(output I2 kernel image name BY 4-level grayscales) ..(the directory of the image)/I44.raw(output I8 kernel image name BY 4-level grayscales) ..(the directory of the image)/I48.raw(output I8 kernel image name BY 4-level grayscales) P2.4 Color Halftoning ex:./clhft.out ..(the directory of the image)/flower.raw(input image name)  ..(the directory of the image)/flower_hft.raw(name of output image) 3(number of channels) 700 700(size according to the homework)  Shrinking: ex:./shrinking.out ..(the directory of the image)/stars.raw(input image name)  ..(the directory of the image)/stars_shrinking.raw(name of output image) 1(number of channels) 640 480(size according to the homework) Thining: ex:./thining.out ..(the directory of the image)/jigsaw_1.raw(input image name)  ..(the directory of the image)/jig_th.raw(name of output image) 1(number of channels) 100 100(size according to the homework) Skeletonizing: ex:./sk.out ..(the directory of the image)/jigsaw_2.raw(input image name)  ..(the directory of the image)/jig_sk.raw(name of output image) 1(number of channels) 100 100(size according to the homework) count game: ex:./board.out ..(the directory of the image)/board.raw(input image name)  ..(the directory of the image)/board_shrk.raw(name of output image) 1(number of channels) 372 372(size according to the homework) 