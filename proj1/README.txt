1.Author Information:    Name: Hanhua Xiao	   ID: 2209-2389-76   Email: hanhuaxi@usc.edu2.Compiler and platform:
   use c++ to implement the algorithms and g++ complier   AppCode on Linux Ubuntu 16.043.How to compile?   Compile: Access to the folder of the code and open in terminal, type g++ -o program_name xxx.cpp in command line   Example: g++ -o hw1.1 hw1.1.cpp  4.Instructions:  P1.1:(it has 3 output images)    ex:./hw1.1.out ..(the directory of the image)/Tiffany.raw(input image name)  ..(the directory of the image)/Tiffany_ligntness.raw(output image name1) 3(number of channels) 512 512(size according to the homework) ..(the directory of the image)/Tiffany_avg.raw(output image name2) ..(the directory of the image)/Tiffany_lumin.raw(output image name3)P1.2 cmy:(it has 3 output images)    ex:./hw1.2.out ..(the directory of the image)/Bear.raw(input image name)  ..(the directory of the image)/Bear_c.raw(output image name1) 3(number of channels) 854 480(size according to the homework) ..(the directory of the image)/Bear_m.raw(output image name2) ..(the directory of the image)/Bear_y.raw(output image name3)P1.3:    ex:./hw1.3.out ..(the directory of the image)/Airplane.raw(input image name)  ..(the directory of the image)/Airplane_out.raw(output image name1) 3(number of channels) 512 512(size according to the homework) 650 650(size after bilinear interpolation)P2.1.1    ex:./hw2.1.1.out ..(the directory of the image)/Desk.raw(input image name)  ..(the directory of the image)/Desk_out.raw(output image name1) 3(number of channels) 400 300(size according to the homework) P2.1    ex:./hw2.1.out ..(the directory of the image)/Desk.raw(input image name)  ..(the directory of the image)/Desk_out.raw(output image name1) 3(number of channels) 400 300(size according to the homework) P2.2   ex:./hw2.2.out ..(the directory of the image)/Star_Wars.raw(input image name)  ..(the directory of the image)/Star_Wars_oil.raw(name of output oil-painting image) 3(number of channels) 600 338(size according to the homework) 5(filter size) 4(if want 64 color ,if want 512 color type8) ..(the directory of the image)/Star_Wars64or512.raw(output color reduced image name)P2.3  ex:./hw2.3.out ..(the directory of the image)/Girl.raw(input image name)  ..(the directory of the image)/Girl_Film.raw(output image name) 3(number of channels) 256 256(size of target image according to the homework) ..(the directory of the image)/Film.raw(Input Reference image ) 1000 750(size of reference image according to the homework)Mean_RGB: ex:./mean_rgb.out ..(the directory of the image)/Lena_mixed.raw(noisy image name)  ..(the directory of the image)/LLena_mean.raw(output image name) 3(number of channels) 512 512(size of target image according to the homework) 5(window size) ..(the directory of the image)/Lena.raw(Input Reference image to calculate PSNR ) Mean_gray: ex:./mean_gray.out ..(the directory of the image)/House_noisy.raw(noisy image name)  ..(the directory of the image)/House_mean.raw(output image name) 1(number of channels) 256 256(size of target image according to the homework) 5(window size) ..(the directory of the image)/House.raw(Input Reference image to calculate PSNR ) Median_RGB: ex:./median_rgb.out ..(the directory of the image)/Lena_mixed.raw(noisy image name)  ..(the directory of the image)/LLena_mean.raw(output image name) 3(number of channels) 512 512(size of target image according to the homework) 5(window size) ..(the directory of the image)/Lena.raw(Input Reference image to calculate PSNR ) Median_gray: ex:./median_gray.out ..(the directory of the image)/House_noisy.raw(noisy image name)  ..(the directory of the image)/House_mean.raw(output image name) 1(number of channels) 256 256(size of target image according to the homework) 5(window size) ..(the directory of the image)/House.raw(Input Reference image to calculate PSNR ) NLM_RGB: ex:./nlm_rgb.out ..(the directory of the image)/Lena_mixed.raw(noisy image name)  ..(the directory of the image)/Lena_nlm.raw(output image name) 3(number of channels) 512 512(size of target image according to the homework) 3( neighbor window size) 5(search window size) 25(sigma of Gaussian kernel)nlm_gray: ex:./nlm_gray.out ..(the directory of the image)/House_noisy.raw(noisy image name)  ..(the directory of the image)/House_nlm.raw(output image name) 1(number of channels) 512 512(size of target image according to the homework) 3( neighbor window size) 5(search window size) 25(sigma of Gaussian kernel)stats(calculate histogram of RGB image): ex:./stats.out ..(the directory of the image)/Desk.raw( name of image you want to know its histogram) 3(channels) 400 300(size) PLPCA£º open DEMO_GPPCA_online.m and click run in the matlab BM3D: First you need to use readraw to read the noisy image and original image. Please type in command line: y = readraw('House.raw') z = readraw('House_noisy.raw') [PSNR y_est]=BM3D(y,z,25) (25 is the sigma of Gaussian noise in the image)